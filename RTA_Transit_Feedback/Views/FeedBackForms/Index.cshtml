@model RTA_Transit_Feedback.Models.FeedBackRelayViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Select Cards to Batch</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        
<div class="container-fluid">
    <hr />
    <div class="form-group">
        <div class="col-md-10">
            <h4>Batch All:    @Html.EditorFor(model => model.BatchAll)</h4>
            @*@Html.ValidationMessageFor(model => model.Forms[i].toBatch, new { htmlAttributes = new { @class = "form-control" } })*@
        </div>
    </div>
    <div class="row">
        <div class="col" >
            <h4>
                Date of Ride
            </h4>
        </div>
        <div class="col col-center">
            <h4>
                Days Since Ride
            </h4>
        </div>
        <div class="col col-right">
            <h4 style="padding-right: 80px;">
                Batch
            </h4>
        </div>

        <div class="col col-center">
            <h4 style="padding-left: 174px;">
                Print
            </h4>
        </div>

    </div>
    @{var colorswap = false;}
    @for (int i = 0; Model.Forms.Count > i; i++)
    {

        @Html.HiddenFor(model => Model.Forms[i].FeedbackID)
        @Html.HiddenFor(model => Model.Forms[i].FeedbackDescription)
        @Html.HiddenFor(model => Model.Forms[i].DateofRide)
        @Html.HiddenFor(model => Model.Forms[i].TimeofRide)
        @Html.HiddenFor(model => Model.Forms[i].RouteName)
        @Html.HiddenFor(model => Model.Forms[i].VehNum)
        @Html.HiddenFor(model => Model.Forms[i].CustomerID)
        @Html.HiddenFor(model => Model.Forms[i].Batch)
        @Html.HiddenFor(model => Model.Forms[i].BatchID)
        @Html.HiddenFor(model => Model.Forms[i].Customers)
        @Html.HiddenFor(model => Model.Forms[i].isDanger)



        if (colorswap == false)
        {
            colorswap = true;
            <div class="row" id="indexfeedbackcolor">
                <div class="col">
                    <p>@Html.DisplayFor(model => Model.Forms[i].DateofRide)</p>
                </div>
                <div class="col col-left">
                    @*Changes bool for at risk feedback*@
                    @if (Model.Forms[i].isDanger == true)
                    {
                        @*Highlights At Risk Feeback*@
                        <p id="feedbackList" style="color:red">@Url.Content(((int)((DateTime.Now - Model.Forms[i].DateofRide).TotalDays)).ToString())</p>
                    }
                    else
                    {
                        <p>@Url.Content(((int)((DateTime.Now - Model.Forms[i].DateofRide).TotalDays)).ToString())</p>
                    }
                </div>
                <div class="form-group">
                    <div class="col">
                        @Html.CheckBoxFor(model => model.Forms[i].toBatch)
                        @*@Html.ValidationMessageFor(model => model.Forms[i].toBatch, new { htmlAttributes = new { @class = "form-control" } })*@
                    </div>
                </div>
                <div class="col col-right">
                    <div class="btn-group">
                        <button>@Html.ActionLink("Print to PDF", "RideHappyOutput", new { id = Model.Forms[i].FeedbackID })</button>
                    </div>
                </div>
                
            </div>

        }
        else
        {
            <div class="row" id="indexfeedbackcolortwo">
                <div class="col">
                    <p>@Html.DisplayFor(model => Model.Forms[i].DateofRide)</p>
                </div>
                <div class="col col-left">
                    @*Changes bool for at risk feedback*@
                    @if (Model.Forms[i].isDanger == true)
                    {
                        @*Highlights At Risk Feeback*@
                        <p id="feedbackList" style="color:red">@Url.Content(((int)((DateTime.Now - Model.Forms[i].DateofRide).TotalDays)).ToString())</p>
                    }
                    else
                    {
                        <p>@Url.Content(((int)((DateTime.Now - Model.Forms[i].DateofRide).TotalDays)).ToString())</p>
                    }
                </div>
                <div class="form-group">
                    <div class="col">
                        @Html.CheckBoxFor(model => model.Forms[i].toBatch)
                        @*@Html.ValidationMessageFor(model => model.Forms[i].toBatch, new { htmlAttributes = new { @class = "form-control" } })*@
                    </div>
                </div>
                <div class="col col-right">
                    <div class="btn-group">
                        <button>@Html.ActionLink("Print to PDF", "RideHappyOutput", new { id = Model.Forms[i].FeedbackID })</button>
                    </div>
                </div>
            </div>
            colorswap = false;
        }

    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Set Selected to Batch" class="btn btn-default" />
        </div>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>

    .col-center{
        text-align: center;
    }

    .col-left {
        text-align: left;
    }

    .col-right {
        text-align: right;
    }

</style>
